"""
–ú–æ–¥—É–ª—å –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
"""
import logging
from telegram import Update
from telegram.ext import ContextTypes

from config import is_admin, read_prompt, write_prompt, reset_prompt

##logger = logging.getLogger(__name__)

async def cmd_prompt(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ö–æ–º–∞–Ω–¥–∞ /prompt - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    –î–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    """
    user_id = update.effective_user.id
    
    if not is_admin(user_id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    try:
        current_prompt = read_prompt()
        
        message = f"üìù **–¢–µ–∫—É—â–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç:**\n\n```\n{current_prompt}\n```"
        
        await update.message.reply_text(
            message,
            parse_mode='Markdown'
        )
        
        #logger.info(f"–ê–¥–º–∏–Ω {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–º–ø—Ç")
        
    except Exception as e:
        #logger.error(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /prompt: {e}")
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ–º–ø—Ç–∞.")

async def cmd_setprompt(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ö–æ–º–∞–Ω–¥–∞ /setprompt - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–æ–≤—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /setprompt –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç –ø—Ä–æ–º–ø—Ç–∞...
    –î–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    """
    user_id = update.effective_user.id
    
    if not is_admin(user_id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã
    if not context.args:
        await update.message.reply_text(
            "‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç.\n"
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/setprompt –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç –ø—Ä–æ–º–ø—Ç–∞...`",
            parse_mode='Markdown'
        )
        return
    
    new_prompt = ' '.join(context.args)
    
    if len(new_prompt.strip()) < 10:
        await update.message.reply_text("‚ùå –ü—Ä–æ–º–ø—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π (–º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤).")
        return
    
    if len(new_prompt) > 2000:
        await update.message.reply_text("‚ùå –ü—Ä–æ–º–ø—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (–º–∞–∫—Å–∏–º—É–º 2000 —Å–∏–º–≤–æ–ª–æ–≤).")
        return
    
    try:
        success = write_prompt(new_prompt)
        
        if success:
            await update.message.reply_text("‚úÖ –ü—Ä–æ–º–ø—Ç –æ–±–Ω–æ–≤–ª—ë–Ω.")
            #logger.info(f"–ê–¥–º–∏–Ω {user_id} –æ–±–Ω–æ–≤–∏–ª –ø—Ä–æ–º–ø—Ç: {new_prompt[:50]}...")
        else:
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ–º–ø—Ç–∞.")
            
    except Exception as e:
        #logger.error(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /setprompt: {e}")
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–º–ø—Ç–∞.")

async def cmd_resetprompt(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ö–æ–º–∞–Ω–¥–∞ /resetprompt - —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø—Ä–æ–º–ø—Ç –∫ –∑–Ω–∞—á–µ–Ω–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    –î–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    """
    user_id = update.effective_user.id
    
    if not is_admin(user_id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    try:
        success = reset_prompt()
        
        if success:
            await update.message.reply_text("‚úÖ –ü—Ä–æ–º–ø—Ç —Å–±—Ä–æ—à–µ–Ω –∫ –∑–Ω–∞—á–µ–Ω–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
            #logger.info(f"–ê–¥–º–∏–Ω {user_id} —Å–±—Ä–æ—Å–∏–ª –ø—Ä–æ–º–ø—Ç –∫ –∑–Ω–∞—á–µ–Ω–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
        else:
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ø—Ä–æ–º–ø—Ç–∞.")
            
    except Exception as e:
        #logger.error(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /resetprompt: {e}")
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ø—Ä–æ–º–ø—Ç–∞.")

async def cmd_stats(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ö–æ–º–∞–Ω–¥–∞ /stats - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–æ—Ç–∞
    –î–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    """
    user_id = update.effective_user.id
    
    if not is_admin(user_id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    try:
        from config import DEBUG_SEND_VOICE, ADMIN_IDS
        from utils import TEMP_DIR
        import os
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        temp_files_count = len(list(TEMP_DIR.glob('*'))) if TEMP_DIR.exists() else 0
        
        # –†–∞–∑–º–µ—Ä –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
        temp_dir_size = 0
        if TEMP_DIR.exists():
            for file_path in TEMP_DIR.rglob('*'):
                if file_path.is_file():
                    temp_dir_size += file_path.stat().st_size
        
        temp_dir_size_mb = temp_dir_size / (1024 * 1024)
        
        stats_message = f"""üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:**

üîß **–ù–∞—Å—Ç—Ä–æ–π–∫–∏:**
‚Ä¢ DEBUG_SEND_VOICE: {DEBUG_SEND_VOICE}
‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {len([aid for aid in ADMIN_IDS if aid != 0])}

üìÅ **–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:**
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {temp_files_count}
‚Ä¢ –†–∞–∑–º–µ—Ä: {temp_dir_size_mb:.2f} MB

üìù **–ü—Ä–æ–º–ø—Ç:**
‚Ä¢ –î–ª–∏–Ω–∞: {len(read_prompt())} —Å–∏–º–≤–æ–ª–æ–≤
"""
        
        await update.message.reply_text(
            stats_message,
            parse_mode='Markdown'
        )
        
        #logger.info(f"–ê–¥–º–∏–Ω {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        
    except Exception as e:
        #logger.error(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /stats: {e}")
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")

async def cmd_cleanup(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ö–æ–º–∞–Ω–¥–∞ /cleanup - –æ—á–∏—â–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    –î–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    """
    user_id = update.effective_user.id
    
    if not is_admin(user_id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    try:
        from utils import cleanup_old_temp_files
        
        # –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª—ã —Å—Ç–∞—Ä—à–µ 1 —á–∞—Å–∞
        cleanup_old_temp_files(max_age_hours=1)
        
        await update.message.reply_text("‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã.")
        #logger.info(f"–ê–¥–º–∏–Ω {user_id} –∑–∞–ø—É—Å—Ç–∏–ª –æ—á–∏—Å—Ç–∫—É –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤")
        
    except Exception as e:
        #logger.error(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /cleanup: {e}")
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Ñ–∞–π–ª–æ–≤.")